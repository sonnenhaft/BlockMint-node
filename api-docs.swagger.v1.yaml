---
swagger: '3.0'
info:
  version: 0.0.1
  title: BlockMint-node
  description: Backend for BlockMint project, for reddis part
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
basePath: "/api/v1"
tags:
- name: Users
  description: CRUD for users
- name: Vpn
  description: CRUD for vpn list
   
consumes:
- application/json
produces:
- application/json
paths:
  "/user":
    get:
      tags:
      - Users
      summary: Get all users in system
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/User"
    post:
      tags:
      - Users
      description: Create new user in system
      parameters:
      - name: user
        in: body
        description: User that we want to create
        schema:
          "$ref": "#/definitions/User"
      produces:
      - application/json
      responses:
        '200':
          description: New user is created
          schema:
            "$ref": "#/definitions/User"
  "/user/{username}":
    parameters:
    - name: username
      in: path
      required: true
      description: ID of user that we want to find
      type: string
    get:
      tags:
      - Users
      summary: Get user with given username
      responses:
        '200':
          description: User is found
          schema:
            "$ref": "#/definitions/User"
    put:
      summary: Update user with given username
      tags:
      - Users
      parameters:
      - name: user
        in: body
        description: User with new values of properties
        schema:
          "$ref": "#/definitions/User"
      responses:
        '200':
          description: User is updated
          schema:
            "$ref": "#/definitions/User"
    delete:
          summary: Delete user with given username
          tags:
          - Users
          responses:
            '200':
              description: User is deleted
              schema:
                "$ref": "#/definitions/User"

  "/vpn":
    get:
      tags:
      - Vpns
      summary: Get vpn list in system
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Vpn"
    post:
      tags:
      - Vpns
      description: Create new VPN in system
      parameters:
      - name: vpn
        in: body
        description: VPN that we want to add
        schema:
          "$ref": "#/definitions/Vpn"
      produces:
      - application/json
      responses:
        '200':
          description: VPN added
          schema:
            "$ref": "#/definitions/Vpn"
  "/vpn/{name}":
    parameters:
    - name: name
      in: path
      required: true
      description: ID of VPN that we want to find
      type: string
    get:
      tags:
      - Vpns
      summary: Get VPN object with given url
      responses:
        '200':
          description: VPN is found
          schema:
            "$ref": "#/definitions/Vpn"
    put:
      summary: Update VPN with given url
      tags:
      - Vpns
      parameters:
      - name: vpn
        in: body
        description: VPN with new values of properties
        schema:
          "$ref": "#/definitions/Vpn"
      responses:
        '200':
          description: VPN is updated
          schema:
            "$ref": "#/definitions/Vpn"
    delete:
      summary: Delete VPN with given url
      tags:
      - Vpns
      responses:
        '200':
          description: VPN is deleted
          schema:
            "$ref": "#/definitions/Vpn"
                
definitions:
  User:
    required:
    - username
    - password
    properties:
      username:
        type: string
        uniqueItems: true
      password:
        type: string
  Vpn:
    required:
    - url
    - name
    properties:
      url:
        type: string
        uniqueItems: true
      name:
        type: string
