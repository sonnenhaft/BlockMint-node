---
swagger: '2.0'
info:
  version: 0.0.3
  title: BlockMint-node
  description: Backend for BlockMint project, for reddis part
  license: { name: MIT,  url: https://opensource.org/licenses/MIT }
basePath: /
tags:
- { name: user, description: User related actions }
- { name: vpn list, description: VPN list operations }
- { name: xmr, description: XMR is a information about operation of decreasing and encreasing the balance }

paths:
  /user:
    post:
      summary: Save user key with given password and address. This api does not validate
        key, it is done by C++ server. Input format is html form, in other words body with mime type "multipart/form-data" (simple HTML form)
      tags: [ user ]
      consumes:
      - multipart/form-data
      parameters:
      - name: address
        description: Address name that is generated by monery when you created new wallet.
        in: formData
        required: true
        type: string
      - name: password
        description: Password that you will be using for your user for operations that require authorization.
        in: formData
        required: true
        type: string
      - in: formData
        description: Address key that you have generated using monero while creating a wallet.
        name: file
        type: file
      responses:
        200: { description: File uploaded, user and password stored in db }
  /user/:address:
    get:
      summary: Get user info with given wallet
      tags: [ user ]
      parameters:
      - name: address
        in: path
        required: true
        type: string
      responses:
        200:
          description: Info about user (right now it is only password)
          schema:
            type: object
            properties:
              wallet: { type: string }
              password: { type: string }
        400: { description: Wallet address not registered }
  /vpn:
    get:
      summary: Get list of vpn severs (urls)
      tags: [ vpn list ]
      responses:
        200:
          description: Returns list of urls
          schema: { type: array,  items: { type: string } }
    post:
      summary: Update list of vpn severs
      tags: [ vpn list ]
      parameters:
      - in: body
        name: body
        description: String list of urls
        schema: { type: array,  items: { type: string } }
      responses:
        200:
          description: Sever was updated successfully
  /xmr/:address:
    get:
      summary: Get list of xmrs, registered via this server related to this address
      tags: [ xmr ]
      responses:
        200:
          description: Returns list of XMR
          schema: { type: array,  items: { type: object } }
    post:
      summary: Add XMR to particular address (wallet) and send it to pool
      tags: [ xmr ]
      parameters:
      - in: body
        name: body
        description: XMR object to be sent to pool
        schema: { type: object }
      responses:
        200:
          description: XMR was sent to pool and stored in the system