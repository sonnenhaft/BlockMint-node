---
swagger: '3.0'
info:
  version: 0.0.1
  title: BlockMint-node
  description: Backend for BlockMint project, for reddis part
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
basePath: "/api/v1"
tags:
- name: Users
  description: API for users in the system
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  "/user":
    get:
          tags:
          - Users
          summary: Get all users in system
          responses:
            '200':
              description: OK
              schema:
                "$ref": "#/definitions/Users"
    post:
      tags:
      - Users
      description: Create new user in system
      parameters:
      - name: user
        in: body
        description: User that we want to create
        schema:
          "$ref": "#/definitions/User"
      produces:
      - application/json
      responses:
        '200':
          description: New user is created
          schema:
            "$ref": "#/definitions/User"
  "/user/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: ID of user that we want to find
      type: string
    get:
      tags:
      - Users
      summary: Get user with given ID
      responses:
        '200':
          description: User is found
          schema:
            "$ref": "#/definitions/User"
    put:
      summary: Update user with given ID
      tags:
      - Users
      parameters:
      - name: user
        in: body
        description: User with new values of properties
        schema:
          "$ref": "#/definitions/User"
      responses:
        '200':
          description: User is updated
          schema:
            "$ref": "#/definitions/User"
    delete:
          summary: Delete user with given ID
          tags:
          - Users
          responses:
            '200':
              description: User is deleted
              schema:
                "$ref": "#/definitions/User"
definitions:
  User:
    required:
    - id
    - username
    - password
    properties:
      id:
        type: string
        uniqueItems: true
      username:
        type: string
      password:
        type: string
  Users:
    type: array
    items:
      "$ref": "#/definitions/User"